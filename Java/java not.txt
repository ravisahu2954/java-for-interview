there are two acess specifiers for outerclass java classes(not inner class)
1.public 2.default
indentifiers can not use java keywords
you can use multyple semicolon after the any statement it cannot give eroor
example:
int a;;;;
System.out.println("hel");;;;

//
// Sort two day array (like array name : intervals[][]) by ascending starting point
 Arrays.sort(intervals, (i1, i2) -> Integer.compare(i1[0], i2[0]));
Sometimes, you want to have variables that are common to all objects. This is accomplished with the static modifier. Fields that have the static modifier in their declaration are called static fields or class variables.


Sometimes, you want to have variables that are common to all objects. This is accomplished with the static modifier. Fields that have the static modifier in their declaration are called static fields or class variables.

public class Main
{
     static int t=5;
     //int static t=5; this is error you cant write static before int.......
	public static void main(String[] args) {
	    Main ob = new Main();
		System.out.println(ob.t); //Note: You can also refer to static fields with an object reference like ob.t
	}
} 

Not all combinations of instance and class variables and methods are allowed:

Instance methods can access instance variables and instance methods directly.
Instance methods can access class variables and class methods directly.
Class methods can access class variables and class methods directly.
Class methods cannot access instance variables or instance methods directlyâ€”they must use an object reference. Also, class methods cannot use the this keyword as there is no instance for this to refer to.

In Java concept of static class is introduced under concept of inner classes,which are specially designed for some delicate functionality in a class.

Static class in Java are allowed only for inner classes which are defined under some other class,as static outer class is not allowed which means that we can't use static keyword with outer class.